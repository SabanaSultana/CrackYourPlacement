/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {

        //using map or hash table
        unordered_set<ListNode*>table;
        ListNode* curr=head;
        while(curr!=NULL){
            if(table.find(curr)!=table.end()){
                return true;
            }
            table.insert(curr);
            curr=curr->next;

        }
        return false;


        //using slow fast method
        // ListNode *slow=head;
        // ListNode* fast=head;
        // while(fast){
        //     fast=fast->next;
        //     if(fast!=NULL){
        //         fast=fast->next;
        //         slow=slow->next;
        //         if(fast==slow) return true;
        //     }
        // }
        // return false;
    }
};